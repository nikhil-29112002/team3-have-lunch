name: 'Build, Test and Deploy'

on:
  push:
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  push-backend-to-uat:
    runs-on: "ubuntu-latest"
    name: "Push Backend to UAT"
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          path: 'backend/'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'

      - name: Restore Packages
        run: dotnet restore HaveLunch.sln

      - name: Build Source
        run: dotnet build HaveLunch/HaveLunch.csproj --configuration Release --no-restore

      - name: Publish Backend
        run: dotnet publish HaveLunch/HaveLunch.csproj --configuration Release --no-restore --no-build

      - name: Test Backend
        run: dotnet test HaveLunch.Tests/HaveLunch.Tests.csproj

      - name: Clean Previous Artifacts
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALTERNATE_HOSTNAME }}
          username: ${{ secrets.ALTERNATE_USER }}
          key: ${{ secrets.ALTERNATE_SSH_KEY }}
          script: |
            cd /var/HaveLunch/HaveLunch.Dev/
            rm -rf *

      - name: Push Artifacts to UAT
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALTERNATE_SSH_KEY }}
          SOURCE: "HaveLunch/bin/Release/net8.0/publish/*"
          REMOTE_HOST: ${{ secrets.ALTERNATE_HOSTNAME }}
          REMOTE_USER: ${{ secrets.ALTERNATE_USER }}
          TARGET: "/var/www/HaveLunch/HaveLunch.Dev/"

  push-frontend-to-uat:
    runs-on: "ubuntu-latest"
    name: "Push Frontend to UAT"
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          path: 'frontend/'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1"

      - name: Install Dependencies
        run: npm ci

      - name: Build Source
        run: npm run build-uat

      - name: Clean Previous Artifacts
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALTERNATE_HOSTNAME }}
          username: ${{ secrets.ALTERNATE_USER }}
          key: ${{ secrets.ALTERNATE_SSH_KEY }}
          script: |
            cd /var/www/html/uat/
            rm -rf *

      - name: Push Artifacts to UAT
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SOURCE: "dist/*"
          REMOTE_HOST: ${{ secrets.HOSTNAME }}
          REMOTE_USER: ${{ secrets.USER }}
          TARGET: "/var/www/html/uat/"

  run-bdd:
    runs-on: "ubuntu-latest"
    name: "Run BDD Tests with Selenium"
    needs: [ push-backend-to-uat, push-frontend-to-uat ]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          path: 'frontend/'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1"

      - name: Install Dependencies
        run: npm ci
        env:
          VITE_HOST_URL: ${{ secrets.VITE_HOST_URL }}
          VITE_HOST_PORT: ${{ secrets.VITE_HOST_PORT }}
          PROD: "true"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Run Tests
        run: npm test
        env:
          VITE_HOST_URL: ${{ secrets.VITE_HOST_URL }}
          VITE_HOST_PORT: ${{ secrets.VITE_HOST_PORT }}
          PROD: "true"

  push-backend-to-prod:
    runs-on: "ubuntu-latest"
    name: "Push Backend to PROD"
    needs: run-bdd
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          path: 'backend/'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'

      - name: Restore Packages
        run: dotnet restore HaveLunch.sln

      - name: Build Source
        run: dotnet build HaveLunch/HaveLunch.csproj --configuration Release --no-restore

      - name: Publish Backend
        run: dotnet publish HaveLunch/HaveLunch.csproj --configuration Release --no-restore --no-build

      - name: Test Backend
        run: dotnet test HaveLunch.Tests/HaveLunch.Tests.csproj

      - name: Clean Previous Artifacts
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALTERNATE_HOSTNAME }}
          username: ${{ secrets.ALTERNATE_USER }}
          key: ${{ secrets.ALTERNATE_SSH_KEY }}
          script: |
            cd /var/HaveLunch/HaveLunch.Prod/
            rm -rf *

      - name: Push Artifacts to UAT
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ALTERNATE_SSH_KEY }}
          SOURCE: "HaveLunch/bin/Release/net8.0/publish/*"
          REMOTE_HOST: ${{ secrets.ALTERNATE_HOSTNAME }}
          REMOTE_USER: ${{ secrets.ALTERNATE_USER }}
          TARGET: "/var/www/HaveLunch/HaveLunch.Prod/"

  push-frontend-to-prod:
    runs-on: "ubuntu-latest"
    name: "Push Frontend to PROD"
    needs: run-bdd
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          path: 'frontend/'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.1"

      - name: Install Dependencies
        run: npm ci

      - name: Build Source
        run: npm run build-prod

      - name: Clean Previous Artifacts
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ALTERNATE_HOSTNAME }}
          username: ${{ secrets.ALTERNATE_USER }}
          key: ${{ secrets.ALTERNATE_SSH_KEY }}
          script: |
            cd /var/www/html/prod/
            rm -rf *

      - name: Push Artifacts to UAT
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SOURCE: "dist/*"
          REMOTE_HOST: ${{ secrets.HOSTNAME }}
          REMOTE_USER: ${{ secrets.USER }}
          TARGET: "/var/www/html/prod/"